#!/bin/bash

# Connect to ec2 instances using either InstanceId, Name tag or Ip address

# Usage:
#    - ec2ssh i-123124123123
#    - ec2ssh [-n 2] name_tag
#    - ec2ssh IP

opts="-o StrictHostKeyChecking=false"
username=core
keypath=~/.ssh/aws

[ "$1" == "-p" ] && { profile="-p $2"; shift; shift; }
[ "$1" == "-r" ] && { region="-r $2"; shift; shift; }
[ "$1" == "-u" ] && { username=$2; shift; shift; }
[ "$1" == "-n" ] && { hostnum=$(($2 - 1)); shift; shift; }
host=$1; shift
awless="awless $profile $region --format=json"

get_running_instances(){
    $awless list instances | jq '.[] | select(.State=="running")'
}

instances=$(get_running_instances)

filter_ip_key(){
    field=$1
    value=$2
    echo "$instances" | jq -r 'select(.'$field'=="'$value'") | .PublicIP, .KeyPair, .Name, .ID' | xargs
}

# This is a instance ID
if echo $host | grep -e "^i-" -q; then
    read -r i_ip i_key i_name i_id <<<$(filter_ip_key ID $host)

# Or an IP address
elif echo $host | grep -P "^([0-9]+\.){3}[0-9]+" -q; then
    read -r i_ip i_key i_name i_id <<<$(filter_ip_key PublicIP $host)

# or a DNS name that resolves
elif [ "$(dig +short $host)" ]; then
    hostIP=$(dig +short $host)
    read -r i_ip i_key i_name i_id <<<$(filter_ip_key PublicIP $hostIP)

# Everything else should be an instance name
else
    filtered_instance_list=$(echo "$instances" | jq 'select(.[] | contains("'$host'"))' 2>/dev/null | jq -s .)
    desired_num_instance_id=$(echo "$filtered_instance_list" | jq -r .[$hostnum].ID)
    read -r i_ip i_key i_name i_id <<<$(filter_ip_key ID $desired_num_instance_id)
fi

echo -e "$i_id $i_name $i_ip\n"
ssh $opts -i $keypath/$i_key $username@$i_ip "$@"
